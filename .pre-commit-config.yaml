# Pre-commit configuration
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # General code quality and formatting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']
      - id: check-toml
      - id: check-json
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python-specific hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
      - id: requirements-txt-fixer

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: '1.7.5'
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: ^tests/
        types: [python]

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        language_version: python3.11
        args: ['--line-length=88', '--target-version=py311']

  # Import sorting
  - repo: https://github.com/PyCQA/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ['--profile', 'black', '--filter-files']

  # Upgrade syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: ['--py38-plus']

  # Flake8 linting
  - repo: https://github.com/PyCQA/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        additional_dependencies:
          - flake8-docstrings
          - flake8-import-order
          - flake8-bugbear
          - flake8-bandit
          - flake8-simplify
          - flake8-comprehensions
          - flake8-pie
          - flake8-use-fstring
          - pep8-naming

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.6.1
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: ['--strict', '--ignore-missing-imports']
        exclude: ^(docs/|tests/)

  # Documentation
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ['--convention=google']
        additional_dependencies: [toml]

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        types_or: [yaml, markdown, json]
        exclude: '^\.github/workflows/'

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck

  # Dependency vulnerability scanning
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        args: ['--short-report']

  # License headers
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        files: \.py$
        args:
          - --license-filepath
          - scripts/license_header.txt
          - --comment-style
          - '#'

  # Commit message validation
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [optional-scope]

  # Jupyter notebook cleaning
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.1
    hooks:
      - id: nbqa-black
        additional_dependencies: [black==23.9.1]
      - id: nbqa-isort
        additional_dependencies: [isort==5.12.0]
      - id: nbqa-flake8
        additional_dependencies: [flake8==6.1.0]

  # SQL formatting
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 2.3.5
    hooks:
      - id: sqlfluff-lint
        additional_dependencies: ['dbt-postgres', 'sqlfluff-templater-dbt']
      - id: sqlfluff-fix
        additional_dependencies: ['dbt-postgres', 'sqlfluff-templater-dbt']
        stages: [manual]

  # Security-specific hooks for sensitive data handling
  - repo: local
    hooks:
      - id: check-no-real-data
        name: Check for real personal data
        entry: python scripts/security/check_no_real_data.py
        language: system
        files: \.(py|md|json|yaml|yml)$
        pass_filenames: true

      - id: validate-test-data
        name: Validate test data usage
        entry: python scripts/security/validate_test_data.py
        language: system
        files: \.py$
        pass_filenames: true

      - id: security-policy-check
        name: Security policy compliance check
        entry: python scripts/security/policy_check.py
        language: system
        files: \.(py|yml|yaml)$
        pass_filenames: true

      - id: crypto-implementation-check
        name: Cryptographic implementation check
        entry: python scripts/security/crypto_check.py
        language: system
        files: \.py$
        pass_filenames: true

  # Performance and optimization
  - repo: local
    hooks:
      - id: performance-check
        name: Performance regression check
        entry: python scripts/performance/check_performance.py
        language: system
        files: \.py$
        pass_filenames: true
        stages: [manual]

  # Compliance checks
  - repo: local
    hooks:
      - id: gdpr-compliance
        name: GDPR compliance check
        entry: python scripts/compliance/gdpr_check.py
        language: system
        files: \.py$
        pass_filenames: true

      - id: hipaa-compliance
        name: HIPAA compliance check
        entry: python scripts/compliance/hipaa_check.py
        language: system
        files: \.py$
        pass_filenames: true

      - id: pci-dss-compliance
        name: PCI DSS compliance check
        entry: python scripts/compliance/pci_dss_check.py
        language: system
        files: \.py$
        pass_filenames: true

# Configuration
default_language_version:
  python: python3.11

default_stages: [commit, push]

# Exclude patterns
exclude: |
  (?x)^(
    \.git/|
    \.venv/|
    \.tox/|
    build/|
    dist/|
    \.eggs/|
    __pycache__/|
    \.pytest_cache/|
    \.mypy_cache/|
    node_modules/|
    \.coverage|
    coverage\.xml|
    \.secrets\.baseline|
    migrations/|
    locale/
  )

# Security-sensitive file patterns that require extra scrutiny
files: |
  (?x)^(
    pyidverify/.*\.py|
    tests/.*\.py|
    scripts/.*\.py|
    docs/.*\.(py|md|rst)|
    \.github/.*\.yml|
    pyproject\.toml|
    requirements.*\.txt|
    SECURITY\.md|
    .*security.*
  )$

# Fail fast - stop on first failure for security hooks
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: '3.0.0'
